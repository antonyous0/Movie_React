{"ast":null,"code":"import _slicedToArray from\"C:/Users/79227/OneDrive/Desktop/react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from\"react\";import{HorizontalLine}from\"../HorizontalLine/HorizontalLine\";import{Movie}from\"../Movie/Movie\";import style from\"./MovieList.module.css\";import{useNavigate,useParams}from\"react-router-dom\";import{GenresFilter}from\"../GenresFilter/GenresFilter\";import{MoviesNotFound}from\"../MoviesNotFound/MoviesNotFound\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var MovieList=function MovieList(_ref){var movies=_ref.movies;var navigate=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),filteredMovies=_useState2[0],setFilteredMovies=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),genres=_useState4[0],setGenres=_useState4[1];var input=useRef(null);var _useParams=useParams(),id=_useParams.id;useEffect(function(){setFilteredMovies(function(){return movies;});},[movies]);useEffect(function(){onChange();},[genres]);var filterMoviesByInput=function filterMoviesByInput(arrMovies){var inputValue=input.current.value;return arrMovies.filter(function(movie){return movie.title.toLowerCase().includes(inputValue.toLowerCase());});};var filterMoviesByGenres=function filterMoviesByGenres(arrMovies){return arrMovies.filter(function(movie){var hash=movie.genres.reduce(function(acc,i){acc[i]=true;return acc;},{});for(var genre in genres){if(!(genre in hash)&&genres[genre]){// Если этого жанра НЕТ у фильма И этот жанр включён, то не подходит фильмец\nreturn false;}}return true;});};var onChange=function onChange(){setFilteredMovies(function(prev){var filteredMoviesByInput=filterMoviesByInput(movies);var filteredMoviesByInputAndGenres=filterMoviesByGenres(filteredMoviesByInput);return filteredMoviesByInputAndGenres;});};return/*#__PURE__*/_jsxs(\"section\",{className:style.leftSection,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:style.input,placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430\",onChange:onChange,ref:input}),/*#__PURE__*/_jsx(GenresFilter,{genres:genres,setGenres:setGenres}),/*#__PURE__*/_jsx(\"div\",{className:style.movies,children:filteredMovies.length===0?/*#__PURE__*/_jsx(MoviesNotFound,{}):filteredMovies.map(function(movie){return/*#__PURE__*/_jsx(Movie,{id:movie.id,title:movie.title,year:movie.year,genres:movie.genres,selected:String(movie.id)===id,onClick:function onClick(){navigate(\"/movies/\".concat(movie.id));}},movie.id);})}),/*#__PURE__*/_jsx(HorizontalLine,{}),/*#__PURE__*/_jsxs(\"div\",{className:style.footer,children:[/*#__PURE__*/_jsx(\"div\",{className:style.footerLabel,children:getFooterText(filteredMovies.length)}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:style.createButton,onClick:function onClick(){navigate(\"/movies/create\");},children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"})]})]});};var getFooterText=function getFooterText(filteredMoviesLength){var result=\"\";result+=filteredMoviesLength===1?\"Найден\":\"Найдено\";result+=\" \";result+=filteredMoviesLength;result+=\" \";result+=filteredMoviesLength>1&&filteredMoviesLength<5?\"элемента\":filteredMoviesLength===1?\"элемент\":\"элементов\";return result;};","map":{"version":3,"names":["React","useEffect","useRef","useState","HorizontalLine","Movie","style","useNavigate","useParams","GenresFilter","MoviesNotFound","MovieList","movies","navigate","filteredMovies","setFilteredMovies","genres","setGenres","input","id","onChange","filterMoviesByInput","arrMovies","inputValue","current","value","filter","movie","title","toLowerCase","includes","filterMoviesByGenres","hash","reduce","acc","i","genre","prev","filteredMoviesByInput","filteredMoviesByInputAndGenres","leftSection","length","map","year","String","footer","footerLabel","getFooterText","createButton","filteredMoviesLength","result"],"sources":["C:/Users/79227/OneDrive/Desktop/react/src/components/MovieList/MovieList.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport type { MovieDetailsData, Movies } from \"../../types\";\r\nimport { HorizontalLine } from \"../HorizontalLine/HorizontalLine\";\r\nimport { Movie } from \"../Movie/Movie\";\r\nimport style from \"./MovieList.module.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { GenresFilter } from \"../GenresFilter/GenresFilter\";\r\nimport { MoviesNotFound } from \"../MoviesNotFound/MoviesNotFound\";\r\n\r\nexport const MovieList = ({ movies }: Movies) => {\r\n  const navigate = useNavigate();\r\n  const [filteredMovies, setFilteredMovies] = useState<any>([]);\r\n  const [genres, setGenres] = useState<any>({});\r\n  const input = useRef<any>(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setFilteredMovies(() => movies);\r\n  }, [movies]);\r\n\r\n  useEffect(() => {\r\n    onChange();\r\n  }, [genres]);\r\n\r\n  const filterMoviesByInput = (arrMovies: MovieDetailsData[]) => {\r\n    const inputValue = input.current.value;\r\n    return arrMovies.filter((movie: MovieDetailsData) =>\r\n      movie.title.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const filterMoviesByGenres = (arrMovies: MovieDetailsData[]) => {\r\n    return arrMovies.filter((movie: MovieDetailsData) => {\r\n      const hash = movie.genres.reduce((acc: any, i: any) => {\r\n        acc[i] = true;\r\n        return acc;\r\n      }, {});\r\n      for (let genre in genres) {\r\n        if (!(genre in hash) && genres[genre]) {\r\n          // Если этого жанра НЕТ у фильма И этот жанр включён, то не подходит фильмец\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const onChange = () => {\r\n    setFilteredMovies((prev: any) => {\r\n      const filteredMoviesByInput = filterMoviesByInput(movies);\r\n      const filteredMoviesByInputAndGenres = filterMoviesByGenres(\r\n        filteredMoviesByInput\r\n      );\r\n      return filteredMoviesByInputAndGenres;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className={style.leftSection}>\r\n      <input\r\n        type=\"text\"\r\n        className={style.input}\r\n        placeholder=\"Введите название фильма\"\r\n        onChange={onChange}\r\n        ref={input}\r\n      ></input>\r\n\r\n      <GenresFilter genres={genres} setGenres={setGenres} />\r\n\r\n      <div className={style.movies}>\r\n        {filteredMovies.length === 0 ? (\r\n          <MoviesNotFound />\r\n        ) : (\r\n          filteredMovies.map((movie: MovieDetailsData) => (\r\n            <Movie\r\n              id={movie.id}\r\n              key={movie.id}\r\n              title={movie.title}\r\n              year={movie.year}\r\n              genres={movie.genres}\r\n              selected={String(movie.id) === id}\r\n              onClick={() => {\r\n                navigate(`/movies/${movie.id}`);\r\n              }}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <HorizontalLine />\r\n\r\n      <div className={style.footer}>\r\n        <div className={style.footerLabel}>\r\n          {getFooterText(filteredMovies.length)}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={style.createButton}\r\n          onClick={() => {\r\n            navigate(`/movies/create`);\r\n          }}\r\n        >\r\n          Добавить\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst getFooterText = (filteredMoviesLength: number) => {\r\n  let result: string = \"\";\r\n  result += filteredMoviesLength === 1 ? \"Найден\" : \"Найдено\";\r\n  result += \" \";\r\n  result += filteredMoviesLength;\r\n  result += \" \";\r\n  result +=\r\n    filteredMoviesLength > 1 && filteredMoviesLength < 5\r\n      ? \"элемента\"\r\n      : filteredMoviesLength === 1\r\n      ? \"элемент\"\r\n      : \"элементов\";\r\n  return result;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}