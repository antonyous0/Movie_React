{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79227\\\\OneDrive\\\\Desktop\\\\react\\\\src\\\\components\\\\MovieList\\\\MovieList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { HorizontalLine } from \"../HorizontalLine/HorizontalLine\";\nimport { Movie } from \"../Movie/Movie\";\nimport style from \"./MovieList.module.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { GenresFilter } from \"../GenresFilter/GenresFilter\";\nimport { MoviesNotFound } from \"../MoviesNotFound/MoviesNotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieList = _ref => {\n  _s();\n  let {\n    movies\n  } = _ref;\n  const navigate = useNavigate();\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [genres, setGenres] = useState({});\n  const input = useRef(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    setFilteredMovies(() => movies);\n  }, [movies]);\n  useEffect(() => {\n    onChange();\n  }, [genres]);\n  const filterMoviesByInput = arrMovies => {\n    const inputValue = input.current.value;\n    return arrMovies.filter(movie => movie.title.toLowerCase().includes(inputValue.toLowerCase()));\n  };\n  const filterMoviesByGenres = arrMovies => {\n    return arrMovies.filter(movie => {\n      const hash = movie.genres.reduce((acc, i) => {\n        acc[i] = true;\n        return acc;\n      }, {});\n      for (let genre in genres) {\n        if (!(genre in hash) && genres[genre]) {\n          // Если этого жанра НЕТ у фильма И этот жанр включён, то не подходит фильмец\n          return false;\n        }\n      }\n      return true;\n    });\n  };\n  const onChange = () => {\n    setFilteredMovies(prev => {\n      const filteredMoviesByInput = filterMoviesByInput(movies);\n      const filteredMoviesByInputAndGenres = filterMoviesByGenres(filteredMoviesByInput);\n      return filteredMoviesByInputAndGenres;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.leftSection,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: style.input,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430\",\n      onChange: onChange,\n      ref: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenresFilter, {\n      genres: genres,\n      setGenres: setGenres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.movies,\n      children: filteredMovies.length === 0 ? /*#__PURE__*/_jsxDEV(MoviesNotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        id: movie.id,\n        title: movie.title,\n        year: movie.year,\n        genres: movie.genres,\n        selected: String(movie.id) === id,\n        onClick: () => {\n          navigate(`/movies/${movie.id}`);\n        }\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.footer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.footerLabel,\n        children: getFooterText(filteredMovies.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: style.createButton,\n        onClick: () => {\n          navigate(`/movies/create`);\n        },\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"AVzwnnSb2Wq1QDp6dj7E5LYDvsk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = MovieList;\nconst getFooterText = filteredMoviesLength => {\n  let result = \"\";\n  result += filteredMoviesLength === 1 ? \"Найден\" : \"Найдено\";\n  result += \" \";\n  result += filteredMoviesLength;\n  result += \" \";\n  result += filteredMoviesLength > 1 && filteredMoviesLength < 5 ? \"элемента\" : filteredMoviesLength === 1 ? \"элемент\" : \"элементов\";\n  return result;\n};\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","HorizontalLine","Movie","style","useNavigate","useParams","GenresFilter","MoviesNotFound","MovieList","movies","navigate","filteredMovies","setFilteredMovies","genres","setGenres","input","id","onChange","filterMoviesByInput","arrMovies","inputValue","current","value","filter","movie","title","toLowerCase","includes","filterMoviesByGenres","hash","reduce","acc","i","genre","prev","filteredMoviesByInput","filteredMoviesByInputAndGenres","leftSection","length","map","year","String","footer","footerLabel","getFooterText","createButton","filteredMoviesLength","result"],"sources":["C:/Users/79227/OneDrive/Desktop/react/src/components/MovieList/MovieList.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport type { MovieDetailsData, Movies } from \"../../types\";\r\nimport { HorizontalLine } from \"../HorizontalLine/HorizontalLine\";\r\nimport { Movie } from \"../Movie/Movie\";\r\nimport style from \"./MovieList.module.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { GenresFilter } from \"../GenresFilter/GenresFilter\";\r\nimport { MoviesNotFound } from \"../MoviesNotFound/MoviesNotFound\";\r\n\r\nexport const MovieList = ({ movies }: Movies) => {\r\n  const navigate = useNavigate();\r\n  const [filteredMovies, setFilteredMovies] = useState<any>([]);\r\n  const [genres, setGenres] = useState<any>({});\r\n  const input = useRef<any>(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setFilteredMovies(() => movies);\r\n  }, [movies]);\r\n\r\n  useEffect(() => {\r\n    onChange();\r\n  }, [genres]);\r\n\r\n  const filterMoviesByInput = (arrMovies: MovieDetailsData[]) => {\r\n    const inputValue = input.current.value;\r\n    return arrMovies.filter((movie: MovieDetailsData) =>\r\n      movie.title.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const filterMoviesByGenres = (arrMovies: MovieDetailsData[]) => {\r\n    return arrMovies.filter((movie: MovieDetailsData) => {\r\n      const hash = movie.genres.reduce((acc: any, i: any) => {\r\n        acc[i] = true;\r\n        return acc;\r\n      }, {});\r\n      for (let genre in genres) {\r\n        if (!(genre in hash) && genres[genre]) {\r\n          // Если этого жанра НЕТ у фильма И этот жанр включён, то не подходит фильмец\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const onChange = () => {\r\n    setFilteredMovies((prev: any) => {\r\n      const filteredMoviesByInput = filterMoviesByInput(movies);\r\n      const filteredMoviesByInputAndGenres = filterMoviesByGenres(\r\n        filteredMoviesByInput\r\n      );\r\n      return filteredMoviesByInputAndGenres;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className={style.leftSection}>\r\n      <input\r\n        type=\"text\"\r\n        className={style.input}\r\n        placeholder=\"Введите название фильма\"\r\n        onChange={onChange}\r\n        ref={input}\r\n      ></input>\r\n\r\n      <GenresFilter genres={genres} setGenres={setGenres} />\r\n\r\n      <div className={style.movies}>\r\n        {filteredMovies.length === 0 ? (\r\n          <MoviesNotFound />\r\n        ) : (\r\n          filteredMovies.map((movie: MovieDetailsData) => (\r\n            <Movie\r\n              id={movie.id}\r\n              key={movie.id}\r\n              title={movie.title}\r\n              year={movie.year}\r\n              genres={movie.genres}\r\n              selected={String(movie.id) === id}\r\n              onClick={() => {\r\n                navigate(`/movies/${movie.id}`);\r\n              }}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <HorizontalLine />\r\n\r\n      <div className={style.footer}>\r\n        <div className={style.footerLabel}>\r\n          {getFooterText(filteredMovies.length)}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={style.createButton}\r\n          onClick={() => {\r\n            navigate(`/movies/create`);\r\n          }}\r\n        >\r\n          Добавить\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst getFooterText = (filteredMoviesLength: number) => {\r\n  let result: string = \"\";\r\n  result += filteredMoviesLength === 1 ? \"Найден\" : \"Найдено\";\r\n  result += \" \";\r\n  result += filteredMoviesLength;\r\n  result += \" \";\r\n  result +=\r\n    filteredMoviesLength > 1 && filteredMoviesLength < 5\r\n      ? \"элемента\"\r\n      : filteredMoviesLength === 1\r\n      ? \"элемент\"\r\n      : \"элементов\";\r\n  return result;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}