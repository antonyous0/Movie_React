{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79227\\\\OneDrive\\\\Desktop\\\\New folder\\\\tinkoff-react-practice\\\\src\\\\components\\\\Main\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport style from \"./Main.module.css\";\nimport { MovieList } from \"../MovieList/MovieList\";\nimport { Outlet } from \"react-router-dom\";\nimport { getMovies } from \"./../../Services/apiService\";\nimport { NotificationManager } from \"react-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getMovies().then(response => {\n      setMovies(response);\n    }).catch(() => {\n      NotificationManager.error(`;(`, \"Ошибка при обновлении списка фильмов\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: style.main,\n    children: [/*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: [setMovies, movies]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","style","MovieList","Outlet","getMovies","NotificationManager","Main","movies","setMovies","then","response","catch","error","main"],"sources":["C:/Users/79227/OneDrive/Desktop/New folder/tinkoff-react-practice/src/components/Main/Main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport style from \"./Main.module.css\";\r\nimport { MovieList } from \"../MovieList/MovieList\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { getMovies } from \"./../../Services/apiService\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nexport const Main = () => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovies()\r\n      .then((response) => {\r\n        setMovies(response);\r\n      })\r\n      .catch(() => {\r\n        NotificationManager.error(`;(`, \"Ошибка при обновлении списка фильмов\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main className={style.main}>\r\n      <MovieList movies={movies} />\r\n      <Outlet context={[setMovies, movies]} />\r\n    </main>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,mBAAmB,QAAQ,qBAAqB;AAAC;AAE1D,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdK,SAAS,EAAE,CACRK,IAAI,CAAEC,QAAQ,IAAK;MAClBF,SAAS,CAACE,QAAQ,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXN,mBAAmB,CAACO,KAAK,CAAE,IAAG,EAAE,sCAAsC,CAAC;IACzE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAM,SAAS,EAAEX,KAAK,CAACY,IAAK;IAAA,wBAC1B,QAAC,SAAS;MAAC,MAAM,EAAEN;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B,QAAC,MAAM;MAAC,OAAO,EAAE,CAACC,SAAS,EAAED,MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEX,CAAC;AAAC,GAnBWD,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}