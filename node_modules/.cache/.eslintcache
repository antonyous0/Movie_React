[{"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\index.tsx":"1","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\reportWebVitals.ts":"2","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\App.tsx":"3","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Main\\Main.tsx":"5","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieDetails\\MovieDetails.tsx":"6","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieCreateForm\\MovieCreateForm.tsx":"7","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieEditForm\\MovieEditForm.tsx":"8","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\Services\\apiService.ts":"9","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Input\\Input.tsx":"10","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\HorizontalLine\\HorizontalLine.tsx":"11","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieList\\MovieList.tsx":"12","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MoviesNotFound\\MoviesNotFound.tsx":"13","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\GenresFilter\\GenresFilter.tsx":"14","C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Movie\\Movie.tsx":"15","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\index.tsx":"16","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\reportWebVitals.ts":"17","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\App.tsx":"18","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieEditForm\\MovieEditForm.tsx":"19","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Main\\Main.tsx":"20","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieDetails\\MovieDetails.tsx":"21","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Header\\Header.tsx":"22","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieCreateForm\\MovieCreateForm.tsx":"23","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\Services\\apiService.ts":"24","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Input\\Input.tsx":"25","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\HorizontalLine\\HorizontalLine.tsx":"26","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieList\\MovieList.tsx":"27","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Movie\\Movie.tsx":"28","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MoviesNotFound\\MoviesNotFound.tsx":"29","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\GenresFilter\\GenresFilter.tsx":"30"},{"size":844,"mtime":1699483920808,"results":"31","hashOfConfig":"32"},{"size":440,"mtime":1699483920808,"results":"33","hashOfConfig":"32"},{"size":896,"mtime":1699483920798,"results":"34","hashOfConfig":"32"},{"size":460,"mtime":1699483920803,"results":"35","hashOfConfig":"32"},{"size":808,"mtime":1699483920808,"results":"36","hashOfConfig":"32"},{"size":3882,"mtime":1699483920808,"results":"37","hashOfConfig":"32"},{"size":5034,"mtime":1699483920808,"results":"38","hashOfConfig":"32"},{"size":5224,"mtime":1699483920808,"results":"39","hashOfConfig":"32"},{"size":827,"mtime":1699483920798,"results":"40","hashOfConfig":"32"},{"size":523,"mtime":1699483920807,"results":"41","hashOfConfig":"32"},{"size":165,"mtime":1699483920803,"results":"42","hashOfConfig":"32"},{"size":3801,"mtime":1699483920808,"results":"43","hashOfConfig":"32"},{"size":371,"mtime":1699483920808,"results":"44","hashOfConfig":"32"},{"size":981,"mtime":1699483920803,"results":"45","hashOfConfig":"32"},{"size":851,"mtime":1699483920808,"results":"46","hashOfConfig":"32"},{"size":844,"mtime":1699483920808,"results":"47","hashOfConfig":"48"},{"size":440,"mtime":1699483920808,"results":"49","hashOfConfig":"48"},{"size":896,"mtime":1699483920798,"results":"50","hashOfConfig":"48"},{"size":5224,"mtime":1701894903438,"results":"51","hashOfConfig":"48"},{"size":808,"mtime":1701894903420,"results":"52","hashOfConfig":"48"},{"size":3882,"mtime":1701894903438,"results":"53","hashOfConfig":"48"},{"size":462,"mtime":1702419397755,"results":"54","hashOfConfig":"48"},{"size":5034,"mtime":1701894903420,"results":"55","hashOfConfig":"48"},{"size":827,"mtime":1701894903418,"results":"56","hashOfConfig":"48"},{"size":523,"mtime":1699483920807,"results":"57","hashOfConfig":"48"},{"size":165,"mtime":1699483920803,"results":"58","hashOfConfig":"48"},{"size":3801,"mtime":1701714993564,"results":"59","hashOfConfig":"48"},{"size":851,"mtime":1699483920808,"results":"60","hashOfConfig":"48"},{"size":371,"mtime":1699483920808,"results":"61","hashOfConfig":"48"},{"size":981,"mtime":1701894903418,"results":"62","hashOfConfig":"48"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sy90hz",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"awknob",{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"111"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"111"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"111"},"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\index.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\reportWebVitals.ts",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\App.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Header\\Header.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Main\\Main.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieDetails\\MovieDetails.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieCreateForm\\MovieCreateForm.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieEditForm\\MovieEditForm.tsx",["157","158"],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\Services\\apiService.ts",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Input\\Input.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\HorizontalLine\\HorizontalLine.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MovieList\\MovieList.tsx",["159"],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\MoviesNotFound\\MoviesNotFound.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\GenresFilter\\GenresFilter.tsx",["160","161"],[],"C:\\Users\\79227\\OneDrive\\Desktop\\New folder\\tinkoff-react-practice\\src\\components\\Movie\\Movie.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\index.tsx",[],[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\reportWebVitals.ts",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\App.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieEditForm\\MovieEditForm.tsx",["162","163"],[],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport style from \"./MovieEditForm.module.css\";\r\nimport { useOutletContext, useParams } from \"react-router-dom\";\r\nimport { editMovie, getMovieById, getMovies } from \"../../Services/apiService\";\r\nimport { MovieDetailsData } from \"../../types\";\r\nimport { HorizontalLine } from \"../HorizontalLine/HorizontalLine\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { Input } from \"../Input/Input\";\r\n\r\nconst labelsTemplate = {\r\n  title: \"Название фильма\",\r\n  year: \"Год выпуска\",\r\n  plot: \"Описание\",\r\n  posterUrl: \"Укажите ссылку на обложку\",\r\n  rate: \"Рейтинг\",\r\n  actors: \"Укажите список актеров\",\r\n  director: \"Режиссер\",\r\n  genres: \"Укажите список жанров\",\r\n  runtime: \"Укажите продолжительность\",\r\n};\r\n\r\nconst placeholdersTemplate = {\r\n  title: \"Введите название фильма\",\r\n  year: \"Введите год выпуска\",\r\n  plot: \"Введите ...\",\r\n  posterUrl: \"Введите ...\",\r\n  rate: \"Задайте рейтинг\",\r\n  actors: \"Введите актеров (через ,)\",\r\n  director: \"Введите ...\",\r\n  genres: \"Введите ...\",\r\n  runtime: \"Введите продолжительность\",\r\n};\r\n\r\nconst initMovieData = {\r\n  id: 0,\r\n  title: \"\",\r\n  year: 0,\r\n  plot: \"\",\r\n  posterUrl: \"\",\r\n  rate: 0,\r\n  actors: \"\",\r\n  genres: [],\r\n  runtime: 0,\r\n  director: \"\",\r\n};\r\n\r\nexport const MovieEditForm = () => {\r\n  const [setMovies, movies] = useOutletContext<any>();\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [movie, setMovie] = useState<MovieDetailsData>(initMovieData);\r\n\r\n  useEffect(() => {\r\n    getMovieById(Number(id)).then((response) => {\r\n      if (!(\"rate\" in response)) response.rate = 0;\r\n      setMovie(response);\r\n    });\r\n  }, []);\r\n\r\n  const saveData = async () => {\r\n    try {\r\n      await editMovie(movie);\r\n      const newMovies = await getMovies();\r\n      setMovies(newMovies);\r\n      NotificationManager.success(`😃😃😃`, \"Фильм отредактирован\");\r\n      navigate(`/movies/${id}`);\r\n    } catch (e) {\r\n      NotificationManager.error(`;(`, \"Ошибка при обновлении списка фильмов\");\r\n    }\r\n  };\r\n\r\n  const handleChangeFor = useCallback(\r\n    (propertyName: string) => (event: { target: { value: any } }) => {\r\n      let newValue = event.target.value;\r\n      if (propertyName === \"genres\") {\r\n        newValue = newValue.split(\",\");\r\n      }\r\n      setMovie((movie) => ({\r\n        ...movie,\r\n        [propertyName]: newValue,\r\n      }));\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form className={style.form}>\r\n      <div className={style.title}>Редактирование</div>\r\n\r\n      <Input\r\n        label={labelsTemplate.title}\r\n        placeholder={placeholdersTemplate.title}\r\n        value={movie?.title}\r\n        id=\"title\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.year}\r\n        placeholder={placeholdersTemplate.year}\r\n        value={String(movie?.year)}\r\n        id=\"year\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.plot}\r\n        placeholder={placeholdersTemplate.plot}\r\n        value={movie?.plot}\r\n        id=\"plot\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.posterUrl}\r\n        placeholder={placeholdersTemplate.posterUrl}\r\n        value={movie?.posterUrl}\r\n        id=\"posterUrl\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.rate}\r\n        placeholder={placeholdersTemplate.rate}\r\n        value={String(movie?.rate)}\r\n        id=\"rate\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.actors}\r\n        placeholder={placeholdersTemplate.actors}\r\n        value={movie?.actors}\r\n        id=\"actors\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.director}\r\n        placeholder={placeholdersTemplate.director}\r\n        value={movie?.director}\r\n        id=\"director\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.genres}\r\n        placeholder={placeholdersTemplate.genres}\r\n        value={String(movie?.genres)}\r\n        id=\"genres\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <Input\r\n        label={labelsTemplate.runtime}\r\n        placeholder={placeholdersTemplate.runtime}\r\n        value={String(movie?.runtime)}\r\n        id=\"runtime\"\r\n        onChange={handleChangeFor}\r\n      />\r\n\r\n      <HorizontalLine />\r\n\r\n      <div className={style.footer}>\r\n        <button\r\n          type=\"button\"\r\n          className={style.cancelButton}\r\n          onClick={() => {\r\n            navigate(`/movies/${id}`);\r\n          }}\r\n        >\r\n          Отменить\r\n        </button>\r\n        <button type=\"button\" className={style.saveButton} onClick={saveData}>\r\n          Сохранить\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Main\\Main.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieDetails\\MovieDetails.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Header\\Header.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieCreateForm\\MovieCreateForm.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\Services\\apiService.ts",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Input\\Input.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\HorizontalLine\\HorizontalLine.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MovieList\\MovieList.tsx",["164"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport type { MovieDetailsData, Movies } from \"../../types\";\r\nimport { HorizontalLine } from \"../HorizontalLine/HorizontalLine\";\r\nimport { Movie } from \"../Movie/Movie\";\r\nimport style from \"./MovieList.module.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { GenresFilter } from \"../GenresFilter/GenresFilter\";\r\nimport { MoviesNotFound } from \"../MoviesNotFound/MoviesNotFound\";\r\n\r\nexport const MovieList = ({ movies }: Movies) => {\r\n  const navigate = useNavigate();\r\n  const [filteredMovies, setFilteredMovies] = useState<any>([]);\r\n  const [genres, setGenres] = useState<any>({});\r\n  const input = useRef<any>(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setFilteredMovies(() => movies);\r\n  }, [movies]);\r\n\r\n  useEffect(() => {\r\n    onChange();\r\n  }, [genres]);\r\n\r\n  const filterMoviesByInput = (arrMovies: MovieDetailsData[]) => {\r\n    const inputValue = input.current.value;\r\n    return arrMovies.filter((movie: MovieDetailsData) =>\r\n      movie.title.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const filterMoviesByGenres = (arrMovies: MovieDetailsData[]) => {\r\n    return arrMovies.filter((movie: MovieDetailsData) => {\r\n      const hash = movie.genres.reduce((acc: any, i: any) => {\r\n        acc[i] = true;\r\n        return acc;\r\n      }, {});\r\n      for (let genre in genres) {\r\n        if (!(genre in hash) && genres[genre]) {\r\n          // Если этого жанра НЕТ у фильма И этот жанр включён, то не подходит фильмец\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const onChange = () => {\r\n    setFilteredMovies((prev: any) => {\r\n      const filteredMoviesByInput = filterMoviesByInput(movies);\r\n      const filteredMoviesByInputAndGenres = filterMoviesByGenres(\r\n        filteredMoviesByInput\r\n      );\r\n      return filteredMoviesByInputAndGenres;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className={style.leftSection}>\r\n      <input\r\n        type=\"text\"\r\n        className={style.input}\r\n        placeholder=\"Введите название фильма\"\r\n        onChange={onChange}\r\n        ref={input}\r\n      ></input>\r\n\r\n      <GenresFilter genres={genres} setGenres={setGenres} />\r\n\r\n      <div className={style.movies}>\r\n        {filteredMovies.length === 0 ? (\r\n          <MoviesNotFound />\r\n        ) : (\r\n          filteredMovies.map((movie: MovieDetailsData) => (\r\n            <Movie\r\n              id={movie.id}\r\n              key={movie.id}\r\n              title={movie.title}\r\n              year={movie.year}\r\n              genres={movie.genres}\r\n              selected={String(movie.id) === id}\r\n              onClick={() => {\r\n                navigate(`/movies/${movie.id}`);\r\n              }}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <HorizontalLine />\r\n\r\n      <div className={style.footer}>\r\n        <div className={style.footerLabel}>\r\n          {getFooterText(filteredMovies.length)}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={style.createButton}\r\n          onClick={() => {\r\n            navigate(`/movies/create`);\r\n          }}\r\n        >\r\n          Добавить\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst getFooterText = (filteredMoviesLength: number) => {\r\n  let result: string = \"\";\r\n  result += filteredMoviesLength === 1 ? \"Найден\" : \"Найдено\";\r\n  result += \" \";\r\n  result += filteredMoviesLength;\r\n  result += \" \";\r\n  result +=\r\n    filteredMoviesLength > 1 && filteredMoviesLength < 5\r\n      ? \"элемента\"\r\n      : filteredMoviesLength === 1\r\n      ? \"элемент\"\r\n      : \"элементов\";\r\n  return result;\r\n};\r\n","C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\Movie\\Movie.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\MoviesNotFound\\MoviesNotFound.tsx",[],[],"C:\\Users\\79227\\OneDrive\\Desktop\\react\\src\\components\\GenresFilter\\GenresFilter.tsx",["165","166"],[],"import React, { useEffect, useState } from \"react\";\r\nimport style from \"./GenresFilter.module.css\";\r\nimport { getGenres } from \"./../../Services/apiService\";\r\n\r\nexport const GenresFilter = ({ genres, setGenres }: any) => {\r\n  useEffect(() => {\r\n    getGenres().then((response) => {\r\n      const obj: any = {};\r\n      for (let genre of response) {\r\n        obj[genre] = false;\r\n      }\r\n      setGenres((prev: any) => obj);\r\n    });\r\n  }, []);\r\n\r\n  const changeStateOfGenre = (genre: any) => () => {\r\n    const newGenres: any = {\r\n      ...genres,\r\n    };\r\n    newGenres[genre] = !newGenres[genre];\r\n    setGenres((prev: any) => newGenres);\r\n  };\r\n\r\n  return (\r\n    <div className={style.genres}>\r\n      {Object.keys(genres).map((genre, i) => (\r\n        <span\r\n          className={genres[genre] ? style.activeGenre : style.genre}\r\n          key={genre}\r\n          onClick={changeStateOfGenre(genre)}\r\n        >\r\n          {genre}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"167","severity":1,"message":"168","line":49,"column":21,"nodeType":"169","messageId":"170","endLine":49,"endColumn":27},{"ruleId":"171","severity":1,"message":"172","line":59,"column":6,"nodeType":"173","endLine":59,"endColumn":8,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":23,"column":6,"nodeType":"173","endLine":23,"endColumn":14,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"177","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"178","line":14,"column":6,"nodeType":"173","endLine":14,"endColumn":8,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"168","line":49,"column":21,"nodeType":"169","messageId":"170","endLine":49,"endColumn":27},{"ruleId":"171","severity":1,"message":"172","line":59,"column":6,"nodeType":"173","endLine":59,"endColumn":8,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"175","line":23,"column":6,"nodeType":"173","endLine":23,"endColumn":14,"suggestions":"181"},{"ruleId":"167","severity":1,"message":"177","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"178","line":14,"column":6,"nodeType":"173","endLine":14,"endColumn":8,"suggestions":"182"},"@typescript-eslint/no-unused-vars","'movies' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["184"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setGenres'. Either include it or remove the dependency array. If 'setGenres' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],["186"],["187"],["188"],{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"189","fix":"195"},{"desc":"191","fix":"196"},{"desc":"193","fix":"197"},"Update the dependencies array to be: [id]",{"range":"198","text":"199"},"Update the dependencies array to be: [genres, onChange]",{"range":"200","text":"201"},"Update the dependencies array to be: [setGenres]",{"range":"202","text":"203"},{"range":"204","text":"199"},{"range":"205","text":"201"},{"range":"206","text":"203"},[1733,1735],"[id]",[862,870],"[genres, onChange]",[438,440],"[setGenres]",[1733,1735],[862,870],[438,440]]